{"version":3,"sources":["home/home.js","card/card.js","Snake/Snake.js","App.js","index.js"],"names":["Template","className","to","emoji_list","selected","Card","useState","start","setStart","score","setScore","correct","setCorrect","popup","useRef","array","i","length","j","Math","floor","random","shuffle","setTimeout","document","querySelectorAll","forEach","ele","classList","add","innerHTML","CardList","number","map","num","onClick","e","target","contains","toggle","push","pop","flip","current","remove","ref","Snake","board","randomPosition","x","y","boards","setBoards","position","setPosition","direction","setDirection","food","setFood","end","setEnd","makeBoard","row","index","cell","window","addEventListener","key","callback","savedCallback","useEffect","timer","setInterval","clearInterval","useInterval","newSnake","gameOver","newBoards","displaySnake","App","path","introPath","exact","component","Home","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9547c41.chunk.js","sourcesContent":["import \"./home.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Template() {\n  return (\n    <div className=\"Home\">\n      <h1 className=\"Home-Title\">\n        React\n        <br /> Mini Game\n      </h1>\n      <div className=\"Home-Menu\">\n        <Link to=\"/card\">\n          <div className=\"Home-Card\">Card Matching</div>\n        </Link>\n        <Link to=\"/snake\">\n          <div className=\"Home-Snake\">Snake Game</div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Template;\n","import { Link } from \"react-router-dom\";\nimport React, { useState, useRef } from \"react\";\nimport \"./card.css\";\n\nconst emoji_list = [\n  \"●\",\n  \"●\",\n  \"☺\",\n  \"☺\",\n  \"☀\",\n  \"☀\",\n  \"♣\",\n  \"♣\",\n  \"♘\",\n  \"♘\",\n  \"♪\",\n  \"♪\",\n  \"♧\",\n  \"♧\",\n  \"★\",\n  \"★\",\n  \"☁\",\n  \"☁\",\n  \"♔\",\n  \"♔\",\n];\n\nconst selected = [];\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction Card() {\n  const [start, setStart] = useState(true);\n  const [score, setScore] = useState(0);\n  const [correct, setCorrect] = useState(0);\n\n  const popup = useRef();\n\n  const All_flip = () => {\n    const all = document.querySelectorAll(\".Card-back\");\n    all.forEach((ele) => {\n      ele.classList.add(\"front\");\n      ele.innerHTML = \"?\";\n    });\n  };\n\n  if (start) {\n    shuffle(emoji_list);\n    setTimeout(All_flip, 2000);\n    setStart(false);\n  }\n\n  const flip = (e, num) => {\n    if (e.target.classList.contains(\"front\")) {\n      e.target.classList.toggle(\"front\");\n      if (e.target.classList[1] === \"front\") {\n        e.target.innerHTML = \"?\";\n      } else {\n        e.target.innerHTML = emoji_list[num - 1];\n      }\n      selected.push(e.target);\n      if (selected.length === 2) {\n        if (selected[0].innerHTML === selected[1].innerHTML) {\n          selected.forEach((ele) => {\n            setTimeout(() => {\n              ele.classList.add(\"hidden\");\n            }, 700);\n          });\n          selected.pop();\n          selected.pop();\n          setScore(score + 10);\n          setCorrect(correct + 2);\n        } else {\n          selected.forEach((ele) => {\n            setTimeout(() => {\n              ele.classList.toggle(\"front\");\n              ele.innerHTML = \"?\";\n            }, 1000);\n          });\n          selected.pop();\n          selected.pop();\n          setScore(score - 5);\n        }\n      }\n    }\n  };\n\n  const CardList = (number) =>\n    number.map((num) => {\n      return (\n        <td key={num} className=\"Card-back\" onClick={(e) => flip(e, num)}>\n          {emoji_list[num - 1]}\n        </td>\n      );\n    });\n\n  if (correct === 20) {\n    popup.current.classList.remove(\"hidden\");\n  }\n\n  const restart = () => {\n    setCorrect(0);\n    setScore(0);\n    setStart(true);\n    const all = document.querySelectorAll(\".Card-back.hidden\");\n    all.forEach((ele) => {\n      ele.classList.remove(\"hidden\");\n    });\n    popup.current.classList.add(\"hidden\");\n  };\n\n  return (\n    <div className=\"Card\">\n      <div className=\"Card-board\">\n        <table>\n          <tbody>\n            <tr>{CardList([1, 2, 3, 4, 5])}</tr>\n            <tr>{CardList([6, 7, 8, 9, 10])}</tr>\n            <tr>{CardList([11, 12, 13, 14, 15])}</tr>\n            <tr>{CardList([16, 17, 18, 19, 20])}</tr>\n          </tbody>\n        </table>\n      </div>\n      <Link to=\"/\">\n        <button className=\"Card-button\">Back</button>\n      </Link>\n      <div className=\"Card-score\">\n        Score\n        <div>{score}</div>\n      </div>\n      <div className=\"Card-popup hidden\" ref={popup}>\n        <div className=\"Card-popup_layer\">\n          <div className=\"Card-text_area\">\n            GAME OVER\n            <div className=\"Card-popup-score\"> Score:{score}</div>\n          </div>\n          <div className=\"Card-btn_area\">\n            <div className=\"Card-restart\" onClick={restart}>\n              RESTART\n            </div>\n            <Link to=\"/\">\n              <div className=\"Card-exit\">EXIT</div>\n            </Link>\n          </div>\n        </div>\n        <div className=\"Card-popup_dimmed\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import \"./Snake.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useRef, useEffect } from \"react\";\n\nfunction Snake() {\n  let board = [];\n  for (let i = 0; i < 30; i++) {\n    board.push([]);\n    for (let j = 0; j < 30; j++) {\n      board[i].push(\"none\");\n    }\n  }\n\n  const randomPosition = () => {\n    const rPosition = {\n      x: Math.floor(Math.random() * 30),\n      y: Math.floor(Math.random() * 30),\n    };\n    return rPosition;\n  };\n\n  const [boards, setBoards] = useState(board);\n  const [position, setPosition] = useState([{ x: 10, y: 10 }]);\n  const [direction, setDirection] = useState(\"right\");\n  const [food, setFood] = useState(randomPosition);\n  const [score, setScore] = useState(0);\n  const [end, setEnd] = useState(false);\n\n  const popup = useRef();\n\n  const makeBoard = boards.map((row, index) => {\n    return (\n      <tr key={index} className=\"Snake-Row\">\n        {row.map((cell, index) => {\n          switch (cell) {\n            case \"none\":\n              return <td key={index} className=\"Snake-Cell\"></td>;\n            case \"snake\":\n              return <td key={index} className=\"Snake-Cell snake\"></td>;\n            case \"food\":\n              return <td key={index} className=\"Snake-Cell food\"></td>;\n            default:\n              return <td></td>;\n          }\n        })}\n      </tr>\n    );\n  });\n\n  const displaySnake = () => {\n    const newBoards = board;\n    position.forEach((cell) => {\n      newBoards[cell.x][cell.y] = \"snake\";\n    });\n    newBoards[food.x][food.y] = \"food\";\n\n    setBoards(newBoards);\n  };\n\n  const changeDirection = (e) => {\n    if (e.key === \"ArrowRight\") {\n      setDirection(\"right\");\n    } else if (e.key === \"ArrowLeft\") {\n      setDirection(\"left\");\n    } else if (e.key === \"ArrowUp\") {\n      setDirection(\"up\");\n    } else if (e.key === \"ArrowDown\") {\n      setDirection(\"down\");\n    }\n  };\n\n  window.addEventListener(\"keydown\", changeDirection);\n\n  const moveSnake = () => {\n    const newSnake = [];\n    if (direction === \"right\") {\n      newSnake.push({ x: position[0].x, y: (position[0].y + 1) % 30 });\n    } else if (direction === \"left\") {\n      newSnake.push({ x: position[0].x, y: (position[0].y - 1 + 30) % 30 });\n    } else if (direction === \"up\") {\n      newSnake.push({ x: (position[0].x - 1 + 30) % 30, y: position[0].y });\n    } else if (direction === \"down\") {\n      newSnake.push({ x: (position[0].x + 1) % 30, y: position[0].y });\n    }\n\n    position.forEach((cell) => {\n      newSnake.push(cell);\n    });\n\n    for (let i = 1; i < newSnake.length; i++) {\n      if (newSnake[0].x === newSnake[i].x && newSnake[0].y === newSnake[i].y) {\n        setEnd(true);\n        setTimeout(gameOver, 500);\n      }\n    }\n\n    if (newSnake[0].x === food.x && newSnake[0].y === food.y) {\n      setFood(randomPosition);\n      setScore(score + 10);\n    } else {\n      newSnake.pop();\n    }\n    setPosition(newSnake);\n    displaySnake();\n  };\n\n  useInterval(moveSnake);\n\n  function useInterval(callback) {\n    const time = 100;\n    const savedCallback = useRef();\n\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n      if (!end) {\n        let timer = setInterval(() => {\n          savedCallback.current();\n        }, time);\n        return () => clearInterval(timer);\n      }\n    }, []);\n  }\n\n  const gameOver = () => {\n    popup.current.classList.remove(\"hidden\");\n  };\n\n  return (\n    <div className=\"Snake\">\n      <table className=\"Snake-Board\">\n        <tbody>{makeBoard}</tbody>\n      </table>\n      <div className=\"Snake-Score\">\n        <div>Score</div>\n        {score}\n      </div>\n      <Link to=\"/\">\n        <button className=\"Snake-button\">Back</button>\n      </Link>\n      <div className=\"Snake-popup hidden\" ref={popup}>\n        <div className=\"Snake-popup_layer\">\n          <div className=\"Snake-text_area\">\n            GAME OVER\n            <div className=\"Snake-popup-score\">Score : {score}</div>\n          </div>\n          <div className=\"Snake-btn_area\">\n            <Link to=\"/\">\n              <div className=\"Snake-exit\">EXIT</div>\n            </Link>\n          </div>\n        </div>\n        <div className=\"Snake-popup_dimmed\"></div>\n      </div>\n    </div>\n  );\n}\nexport default Snake;\n","import { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./home/home\";\nimport Card from \"./card/card.js\";\nimport Snake from \"./Snake/Snake.js\";\nimport { introPath } from \"./constant\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Route path={introPath + \"/\"} exact component={Home} />\n        <Route path={introPath + \"/card\"} component={Card} />\n        <Route path={introPath + \"/snake\"} component={Snake} />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}